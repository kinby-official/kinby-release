name: Build Client
on:
  workflow_dispatch:
    inputs:
      ref: 
        description: "The ref to build"
        required: true
        default: main
        type: string
      debug:
        description: "launch tmate session on failure"
        required: false
        default: false
        type: boolean
jobs:
  android:
    runs-on: [ubuntu-latest]
    steps:
      - name: Check Out Code
        uses: actions/checkout@v4
        with:
          repository: kinby-official/kinby
          token: ${{ secrets.MAIN_PAT }}
          ref: ${{ inputs.ref }}
      - name: Extract Signature
        run: echo ${{secrets.KEY_FILE}} | base64 -d > $HOME/.android.jks
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      - name: flutter generate
        run: dart run build_runner build --delete-conflicting-outputs && flutter gen-l10n
      - name: Build APK
        run: flutter build apk --split-per-abi
        env:
          KEY_PASS: ${{secrets.KEY_PASS}}
      - name: Set short SHA
        id: short_sha
        run: echo "SHORT_SHA=$(git log --oneline | head -n 1 | awk '{ print $1 }')" >> $GITHUB_OUTPUT
        shell: bash
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: kinby-android-${{ inputs.ref }}-${{ steps.short_sha.outputs.SHORT_SHA }}
          path: build/app/outputs/apk/release/*.apk
      - name: Setup session
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 30
        if: ${{ failure() && inputs.debug }}
  desktop:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - abi: linux_x64
            os: ubuntu-22.04
            platfrom: linux
            bundle-path: build/linux/x64/release/bundle
          - abi: macos_arm64
            os: macos-latest
            platfrom: macos
            bundle-path: build/macos/Build/Products/Release/*.app
          - abi: windows_x64
            os: windows-latest
            platfrom: windows
            bundle-path: build/windows/x64/runner/Release
    steps:
      - name: Check Out Code
        uses: actions/checkout@v4
        with:
          repository: kinby-official/kinby
          token: ${{ secrets.MAIN_PAT }}
          ref: ${{ inputs.ref }}
      - run: sudo apt-get update && sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev libblkid-dev liblzma-dev libmpv-dev libasound2-dev
        if: matrix.platfrom == 'linux'
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      - run: flutter config --enable-${{ matrix.platfrom }}-desktop
      - name: flutter generate
        run: dart run build_runner build --delete-conflicting-outputs && flutter gen-l10n
      - name: Build ${{ matrix.platfrom }}
        run: flutter build ${{ matrix.platfrom }}
      - name: Set short SHA
        id: short_sha
        run: echo "SHORT_SHA=$(git log --oneline | head -n 1 | awk '{ print $1 }')" >> $GITHUB_OUTPUT
        shell: bash
      - name: Upload Client
        uses: actions/upload-artifact@v4
        with:
          name: kinby-${{ matrix.abi }}-${{ inputs.ref }}-${{ steps.short_sha.outputs.SHORT_SHA }}
          path: ${{ matrix.bundle-path }}
      - name: Setup session
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 30
        if: ${{ failure() && inputs.debug }}